<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xn.hk.exam.dao.QuestionDao">
	<!--使用redis作为mybatis的二级缓存,针对具体某条语句禁用缓存,useCache="false",这里的RedisCache是个别名 
	<cache eviction="LRU" type="RedisCache" />-->
	<!-- 题目映射 -->
	<resultMap type="Question" id="questionMap">
		<id property="questionId" column="question_id" />
		<result property="questionTitle" column="question_title" />
		<result property="optionA" column="optionA" />
		<result property="optionB" column="optionB" />
		<result property="optionC" column="optionC" />
		<result property="optionD" column="optionD" />
		<result property="answer" column="answer" />
		<result property="curday" column="curday" />
		<result property="questionStatus" column="question_status" />
		<result property="isOk" column="is_ok" />
		<result property="createTime" column="create_time" />
		<result property="updateTime" column="update_time" />
		<result property="remark" column="remark" />
		<result property="questionScore" column="type_score" />
		<result property="userSolution" column="user_solution" />

		<association property="type" javaType="QuestionType">
			<id property="typeId" column="type_id" />
			<result property="typeName" column="type_name" />
			<result property="isOk" column="is_ok" />
			<result property="createTime" column="create_time" />
			<result property="updateTime" column="update_time" />
			<result property="remark" column="remark" />
		</association>
	</resultMap>
	<!-- 定义数据库基本列,只适用代替单表的* -->
	<sql id="Base_Column_List">question_id,type_id,question_title,optionA,optionB,optionC,optionD,answer,curday,question_status,is_ok,create_time,update_time,remark
	</sql>
	<!-- 分页显示列表 -->
	<select id="pageList" parameterType="BasePage" resultMap="questionMap">
		select * from tb_xn_exam_question q inner join tb_xn_exam_type t on
		q.type_id=t.type_id where q.is_ok=0
		<if test="bean != null">
			<if test="bean.questionTitle != null and bean.questionTitle != ''">
				and q.question_title like CONCAT(CONCAT('%',
				#{bean.questionTitle}),'%')
			</if>
			<if test="bean.type.typeId != null and bean.type.typeId != ''">
				and q.type_id = #{bean.type.typeId}
			</if>
			<if test="bean.curday != null and bean.curday != ''">
				and q.curday = #{bean.curday}
			</if>
			<if test="bean.questionStatus != null and bean.questionStatus != ''">
				and q.question_status = #{bean.questionStatus}
			</if>
			<if test="bean.remark != null and bean.remark != ''">
				and q.remark like CONCAT(CONCAT('%',
				#{bean.remark}),'%')
			</if>
		</if>
		ORDER BY q.create_time DESC LIMIT #{start},#{size}
	</select>
	<!-- 分页总记录数 -->
	<select id="pageCount" parameterType="BasePage" resultType="int">
		SELECT COUNT(1) FROM tb_xn_exam_question q INNER JOIN tb_xn_exam_type
		t ON q.type_id=t.type_id WHERE q.is_ok=0
		<if test="bean != null">
			<if test="bean.questionTitle != null and bean.questionTitle != ''">
				and q.question_title like CONCAT(CONCAT('%',
				#{bean.questionTitle}),'%')
			</if>
			<if test="bean.type.typeId != null and bean.type.typeId != ''">
				and q.type_id = #{bean.type.typeId}
			</if>
			<if test="bean.curday != null and bean.curday != ''">
				and q.curday = #{bean.curday}
			</if>
			<if test="bean.questionStatus != null">
				and q.question_status = #{bean.questionStatus}
			</if>
			<if test="bean.remark != null and bean.remark != ''">
				and q.remark like CONCAT(CONCAT('%',
				#{bean.remark}),'%')
			</if>
		</if>
	</select>
	<!-- 根据题目id查询该题目 -->
	<select id="findById" parameterType="java.lang.Integer"
		resultMap="questionMap">
		SELECT *
		FROM tb_xn_exam_question q inner join
		tb_xn_exam_type t on
		q.type_id=t.type_id WHERE q.is_ok=0 AND
		q.question_id=#{0}
	</select>
	<!-- 添加题目 -->
	<insert id="add" parameterType="Question">
		INSERT INTO
		tb_xn_exam_question(type_id,question_title,optionA,optionB,optionC,optionD,answer,curday,question_status,is_ok,create_time,update_time,remark)
		VALUES(#{type.typeId},#{questionTitle},#{optionA},#{optionB},#{optionC},#{optionD},#{answer},DATE_FORMAT(NOW(),'%Y%m%d'),0,0,NOW(),NOW(),#{remark})
	</insert>
	<!-- 更新题目 -->
	<update id="update" parameterType="Question">
		UPDATE tb_xn_exam_question SET
		question_title = #{questionTitle},type_id =
		#{type.typeId},optionA=#{optionA},optionB=#{optionB},optionC=#{optionC},optionD=#{optionD},answer=#{answer},update_time=now(),remark=#{remark}
		where question_id=#{questionId}
	</update>
	<!-- 根据题目id删除该题目，做逻辑删除 -->
	<update id="delete" parameterType="java.lang.Integer">
		UPDATE tb_xn_exam_question SET
		is_ok=1,update_time=now() WHERE question_id = #{0}
	</update>
	<!-- 切换题目状态 -->
	<update id="changeState">
		UPDATE
		tb_xn_exam_question
		SET question_status =
		#{status},update_time=now() where
		question_id=#{questionId}
	</update>
	<!-- 生成指定数量题型的题目数组,供组成试卷 -->
	<select id="genQuestionIds" resultType="java.lang.Integer">
		<!-- mysql数据库中随机生成n条记录,用于数据量小于百万级的,数据量大了,效率变低,要换方法 -->
		SELECT question_id FROM
		tb_xn_exam_question WHERE is_ok=0 AND
		question_status=0 AND type_id=#{typeId}
		ORDER BY
		RAND() LIMIT
		#{typeNum}
	</select>
	<!-- 根据试卷ID查找该试卷的所有题目列表,供在线考试使用 -->
	<select id="findQuestionByPaperId" parameterType="java.lang.Integer"
		resultMap="questionMap">
		SELECT * FROM tb_xn_exam_paper_create c INNER JOIN
		tb_xn_exam_question q ON c.question_id = q.question_id INNER JOIN
		tb_xn_exam_type t ON q.type_id = t.type_id INNER JOIN
		tb_xn_exam_paper_config pc ON c.paper_id = pc.paper_id WHERE
		c.paper_id
		= #{0} AND
		c.is_ok=0 AND pc.type_id = t.type_id ORDER BY
		t.type_id
	</select>
	<!-- 根据试卷ID和用户ID查询学生主观题答案和正确答案信息(只要简答题的信息),供后台批阅试卷使用 -->
	<select id="findAnswerByPaperIdAndUserId" resultMap="questionMap">
		SELECT *
		FROM tb_xn_exam_solution s LEFT JOIN tb_xn_exam_question q ON
		s.question_id = q.question_id WHERE q.type_id = 3 AND
		s.paper_id=#{paperId} AND
		s.user_id =#{userId} AND s.is_ok=0
	</select>
</mapper>