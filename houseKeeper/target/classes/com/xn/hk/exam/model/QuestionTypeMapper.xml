<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xn.hk.exam.dao.QuestionTypeDao">
	<!--使用redis作为mybatis的二级缓存,针对具体某条语句禁用缓存,useCache="false",这里的RedisCache是个别名-->
	<cache eviction="LRU" type="RedisCache" />
	<!-- 题型映射 -->
	<resultMap type="QuestionType" id="questionTypeMap">
		<id property="typeId" column="type_id" />
		<result property="typeName" column="type_name" />
		<result property="isOk" column="is_ok" />
		<result property="createTime" column="create_time" />
		<result property="updateTime" column="update_time" />
		<result property="remark" column="remark" />
	</resultMap>
	<!-- 定义数据库基本列,只适用代替单表的* -->
	<sql id="Base_Column_List">type_id,type_name,is_ok,create_time,update_time,remark
	</sql>
	<!-- 查询所有的题型 -->
	<select id="findAll" resultMap="questionTypeMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM tb_xn_exam_type
		WHERE is_ok = 0 order by create_time desc
	</select>
	<!-- 添加题型 -->
	<insert id="add" parameterType="QuestionType">
		INSERT INTO
		tb_xn_exam_type(type_name,create_time,update_time,remark)
		VALUES(#{typeName},NOW(),NOW(),#{remark})
	</insert>
	<!-- 更新题型 -->
	<update id="update" parameterType="QuestionType">
		UPDATE tb_xn_exam_type SET
		type_name=#{typeName},update_time=now(),remark=#{remark} where
		type_id=#{typeId}
	</update>
	<!-- 逻辑删除题型 -->
	<update id="delete" parameterType="java.lang.Integer">
		UPDATE tb_xn_exam_type SET
		is_ok=1,update_time=now() where
		type_id=#{0}
	</update>
	<!-- 根据题型id查询该题型 -->
	<select id="findById" parameterType="java.lang.Integer"
		resultMap="questionTypeMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM tb_xn_exam_type WHERE is_ok=0 AND
		type_id = #{0}
	</select>
	<!-- 根据题型名查询该题型 -->
	<select id="findByName" parameterType="java.lang.String"
		resultMap="questionTypeMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM tb_xn_exam_type WHERE is_ok=0 AND
		type_name =
		#{0}
	</select>
</mapper>